{
  "version": 3,
  "sources": ["../../stacks/StorageStack.js", "../../stacks/ApiStack.js", "../../stacks/AuthStack.js", "../../stacks/FrontendStack.js", "../../stacks/index.js"],
  "sourcesContent": ["import { Bucket, Table } from \"@serverless-stack/resources\";\n\nexport function StorageStack({ stack, app }) {\n  // Create an S3 bucket\n  const bucket = new Bucket(stack, \"Uploads\", {\n    cors: [\n      {\n        maxAge: \"1 day\",\n        allowedOrigins: [\"*\"],\n        allowedHeaders: [\"*\"],\n        allowedMethods: [\"GET\", \"PUT\", \"POST\", \"DELETE\", \"HEAD\"],\n      },\n    ],\n  });\n\n  // Create the DynamoDB table\n  const table = new Table(stack, \"Events\", {\n    fields: {\n      userId: \"string\",\n      eventId: \"string\",\n    },\n    primaryIndex: { partitionKey: \"userId\", sortKey: \"eventId\" },\n  });\n\n  return {\n    table,\n    bucket\n  };\n}", "import { Api, use } from \"@serverless-stack/resources\";\nimport { StorageStack } from \"./StorageStack\";\n\nexport function ApiStack({ stack, app }) {\n  const { table } = use(StorageStack);\n\n  // Create the API\n  const api = new Api(stack, \"Api\", {\n    defaults: {\n        authorizer: \"iam\",\n        function: {\n            permissions: [table],\n            environment: {\n            TABLE_NAME: table.tableName,\n        },\n      },\n    },\n    cors: true,\n    routes: {\n      \"POST /events\": \"functions/create.main\",\n      \"GET /events/{id}\": \"functions/get.main\",\n      \"GET /events\": \"functions/list.main\",\n      \"PUT /events/{id}\": \"functions/update.main\",\n      \"DELETE /events/{id}\": \"functions/delete.main\",\n    },\n  });\n\n  // Show the API endpoint in the output\n  stack.addOutputs({\n    ApiEndpoint: api.url,\n  });\n\n  // Return the API resource\n  return {\n    api,\n  };\n}", "import * as iam from \"aws-cdk-lib/aws-iam\";\nimport { Cognito, use } from \"@serverless-stack/resources\";\nimport { StorageStack } from \"./StorageStack\";\nimport { ApiStack } from \"./ApiStack\"\n\nexport function AuthStack({ stack, app }) {\n    const { bucket } = use(StorageStack);\n    const { api } = use(ApiStack);\n\n    // Create a Cognito User Pool and Identity Pool\n    const auth = new Cognito(stack, \"Auth\", {\n        login: [\"email\"],\n    })\n\n    auth.attachPermissionsForAuthUsers(stack, [\n        api,\n        new iam.PolicyStatement({\n            actions: [\"s3:*\"],\n            effect: iam.Effect.ALLOW,\n            resources: [\n                bucket.bucketArn + \"/private/${cognito-identity.amazonaws.com:sub}/*\",\n            ],\n        }),\n    ]);\n\n    stack.addOutputs({\n        Region: app.region,\n        UserPoolId: auth.userPoolId,\n        IdentityPoolId: auth.cognitoIdentityPoolId,\n        UserPoolClientId: auth.userPoolClientId\n    })\n\n    return {\n        auth\n    }\n}", "import { ReactStaticSite, use } from \"@serverless-stack/resources\";\nimport { ApiStack } from \"./ApiStack\";\nimport { AuthStack } from \"./AuthStack\";\nimport { StorageStack } from \"./StorageStack\";\n\nexport function FrontendStack({ stack, app }) {\n  const { api } = use(ApiStack);\n  const { auth } = use(AuthStack);\n  const { bucket } = use(StorageStack);\n\n  // Define our React app\n  const site = new ReactStaticSite(stack, \"ReactSite\", {\n    path: \"frontend\",\n    // Pass in our environment variables\n    environment: {\n      REACT_APP_API_URL: api.customDomainUrl || api.url,\n      REACT_APP_REGION: app.region,\n      REACT_APP_BUCKET: bucket.bucketName,\n      REACT_APP_USER_POOL_ID: auth.userPoolId,\n      REACT_APP_IDENTITY_POOL_ID: auth.cognitoIdentityPoolId,\n      REACT_APP_USER_POOL_CLIENT_ID: auth.userPoolClientId,\n    },\n  });\n\n  // Show the url in the output\n  stack.addOutputs({\n    SiteUrl: site.url,\n  });\n}", "import { StorageStack } from \"./StorageStack\";\nimport { ApiStack } from \"./ApiStack\";\nimport { AuthStack } from \"./AuthStack\";\nimport { FrontendStack } from \"./FrontendStack\";\n\nexport default function main(app) {\n  app.setDefaultFunctionProps({\n    runtime: \"nodejs16.x\",\n    srcPath: \"services\",\n    bundle: {\n      format: \"esm\",\n    },\n  });\n  app.stack(StorageStack).stack(ApiStack).stack(AuthStack).stack(FrontendStack);\n}"],
  "mappings": "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",
  "names": ["use", "use", "use", "use"]
}
